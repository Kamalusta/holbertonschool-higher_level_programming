importing
=========

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)


exeptions
==========

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing required positional arguments

>>> bg.integer_validator("name")
Traceback (most recent call last):
TypeError: integer_validator() missing required positional arguments

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", (5,))
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", [7])
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", True)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", {2,5})
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: integer_validator() missing required positional arguments

>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
ValueError: name must be greater than 0

>>> bg.integer_validator("name", -4)
Traceback (most recent call last):
ValueError: name must be greater than 0

